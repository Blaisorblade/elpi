

% simple
kind simple type.
type a simple. % A
type b int -> mut -> simple. % B

% mut
kind mut type.
type c mut. % C
type d simple -> mut. % D

pred map.simple  i:simple, o:simple.
map.simple a a.
map.simple (b A0 A1) (b B0 B1) :- ((=) A0 B0), (map.mut A1 B1).



pred map.mut  i:mut, o:mut.
map.mut c c.
map.mut (d A0) (d B0) :- (map.simple A0 B0).






