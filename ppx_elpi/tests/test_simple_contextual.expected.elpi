

% ctx
kind ctx type.
type entry nominal -> string -> bool -> prop. % Entry

% term
kind term type.
type app term -> term -> term. % App
type lam bool -> string -> (term -> term) -> term. % Lam

pred map.term  i:term, o:term.
map.term (var A0) (var B0) :- ((=) A0 B0).
map.term (app A0 A1) (app B0 B1) :- (map.term A0 B0), (map.term A1 B1).
map.term (lam A0 A1 A2) (lam B0 B1 B2) :- ((=) A0 B0), ((=) A1 B1), (pi x fixme x => (=) A2 B2).






